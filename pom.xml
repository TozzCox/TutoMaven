<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>mv</groupId>
  <artifactId>tutoMaven</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>tutoMaven</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.itextpdf/itextpdf -->
	<dependency>
    <groupId>com.itextpdf</groupId>
    <artifactId>itextpdf</artifactId>
    <version>5.5.13.1</version>
	</dependency>
  </dependencies>

  <build>
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <!--plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin-->
        <plugin>
        <!-- Pour compiler dans la version qu'on veut, ici 1.8 -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- or whatever version you use -->
          <source>14</source>
          <target>14</target>
        </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- Création du site pour mv.tutoMaven -->
	    <plugin>
   		 <groupId>org.apache.maven.plugins</groupId>
   		 <artifactId>maven-project-info-reports-plugin</artifactId>
   		 <version>3.1.1</version>
	    </plugin>
	    <plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-site-plugin</artifactId>
    		<version>3.9.1</version>
		</plugin>
        <plugin>
        <!-- Permet la couverture de tests -->
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.6</version>
            <executions>
              <execution>
              <goals>
                 <goal>prepare-agent</goal>
              </goals>
              </execution> <!-- attached to Maven test phase -->
              <execution>
                 <id>report</id>
                 <phase>prepare-package</phase>
              <goals>
                 <goal>report</goal>
              </goals>
              <configuration>
                 <outputDirectory>target/jacoco-report</outputDirectory>
              </configuration>
              </execution>
            </executions>
         </plugin>
      </plugins>
  </build>
  
  <reporting>
  <plugins>
   <plugin>
   <!-- Génération de la JavaDoc -->
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
	<version>3.2.0</version>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-checkstyle-plugin</artifactId>
    <version>3.1.1</version>
    <!-- le checkstyle permet de donner les détails des erreurs de conventions qu'il peut y avoir lors
    de l'écriture des classes du projet maven en cours -->
    <configuration>
          <configLocation>google_checks.xml</configLocation>
    </configuration>
   </plugin>
 <plugin>
 <!-- Ce plugin permet, en cliquant directement sur le N° de ligne où il y a une erreur, d'aller voir 
 le code source où il y à l'erreur, à la ligne correspondante, cependant on ne peut pas directement modifier
 le code source -->
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-jxr-plugin</artifactId>  
     <version>3.0.0</version>
 </plugin>
  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.14.0</version>
  </plugin>
  <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId> 
  </plugin-->
  <plugin>
  <!-- Permet la couverture de test -->
     <groupId>org.jacoco</groupId>
     <artifactId>jacoco-maven-plugin</artifactId>
     <reportSets>
         <reportSet>
         <reports>
         <!-- select non-aggregate reports -->
         <report>report</report>
         </reports>
         </reportSet>
      </reportSets>
   </plugin>
 </plugins>
</reporting>

<!-- scm>
    <connection>scm:git:git://IPSERVEUR/repository1/monappli</connection>
    <url>http://IPSERVEUR/svn/monappli-web</url>
</scm-->

</project>
